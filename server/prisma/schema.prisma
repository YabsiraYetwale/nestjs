generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(uuid())
  username   String   @unique
  email      String   @unique
  password   String
  role       String?  @default("user")
  company_id String?
  company    Company? @relation("usercompany", fields: [company_id], references: [id], onDelete: Cascade)
}

model Company {
  id                   String     @id @default(uuid())
  company_logo         String?
  name                 String     @unique
  general_manager_name String
  company_number       String     @unique
  vat_reg_number       String     @unique
  house_no             String     @unique
  po_box               String     @unique
  fax                  String     @unique
  email                String     @unique
  tel1                 String?    @unique
  tel2                 String?    @unique
  country              String
  region               String
  city                 String
  subcity              String
  woreda               String
  kebele               String
  users                User[]     @relation("usercompany")
  documents            Document[] @relation("documentcompany")
}

model Document {
  id         String   @id @default(uuid())
  file_name  String
  file_path  String
  company_id String?
  company    Company? @relation("documentcompany", fields: [company_id], references: [id])
}

model Clients {
  id               String     @id @default(uuid())
  name             String
  billing_address  String
  shipping_address String
  shipping_city    String
  shipping_state   String
  shipping_zip     String
  shipping_country String
  contact_person   String
  email            String     @unique
  phone            String
  invoices         Invoices[] @relation("clientInvoices")
}

model Invoices {
  id             String       @id @default(uuid())
  invoice_number String       @unique
  date           DateTime     @default(now())
  due_date       String
  total_amount   Decimal?     @db.Decimal(10, 2)
  status         String?      @default("unpaid")
  isRead         Boolean?     @default(false)
  client_id      String?
  client         Clients?     @relation("clientInvoices", fields: [client_id], references: [email], onDelete: Cascade)
  line_items     Line_Items[] @relation("invoiceLineItems")
}

model Line_Items {
  id          String    @id @default(uuid())
  description String
  quantity    Int
  unit_price  Decimal   @db.Decimal(10, 2)
  tax_rate    Decimal   @db.Decimal(5, 2)
  invoice_id  String?
  invoice     Invoices? @relation("invoiceLineItems", fields: [invoice_id], references: [id], onDelete: Cascade)
}
